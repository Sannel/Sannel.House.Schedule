// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Sannel.House.Schedule.Data;

namespace Sannel.House.Schedule.Data.Migrations.PostgreSQL.Migrations
{
    [DbContext(typeof(ScheduleDbContext))]
    partial class ScheduleDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityByDefaultColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.0-rc.2.20475.6");

            modelBuilder.Entity("Sannel.House.Schedule.Models.Schedule", b =>
                {
                    b.Property<long>("ScheduleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityByDefaultColumn();

                    b.Property<double?>("DefaultMaxValue")
                        .HasColumnType("double precision");

                    b.Property<double>("DefaultMinValue")
                        .HasColumnType("double precision");

                    b.Property<double>("MinimumDifference")
                        .HasColumnType("double precision");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<Guid>("ScheduleKey")
                        .HasColumnType("uuid");

                    b.HasKey("ScheduleId");

                    b.HasIndex("ScheduleKey")
                        .IsUnique();

                    b.ToTable("Schedules");
                });

            modelBuilder.Entity("Sannel.House.Schedule.Models.ScheduleProperty", b =>
                {
                    b.Property<Guid>("SchedulePropertyId")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("character varying(512)");

                    b.Property<long>("ScheduleId")
                        .HasColumnType("bigint");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(1024)
                        .HasColumnType("character varying(1024)");

                    b.HasKey("SchedulePropertyId");

                    b.HasIndex("Name");

                    b.HasIndex("ScheduleId", "Name")
                        .IsUnique();

                    b.ToTable("ScheduleProperties");
                });

            modelBuilder.Entity("Sannel.House.Schedule.Models.ScheduleStart", b =>
                {
                    b.Property<Guid>("ScheduleStartId")
                        .HasColumnType("uuid");

                    b.Property<int?>("DurationMinutes")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<long>("ScheduleId")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset>("Start")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.Property<double?>("ValueMax")
                        .HasColumnType("double precision");

                    b.Property<double>("ValueMin")
                        .HasColumnType("double precision");

                    b.HasKey("ScheduleStartId");

                    b.HasIndex("ScheduleId");

                    b.HasIndex("Start", "Type");

                    b.ToTable("ScheduleStarts");
                });

            modelBuilder.Entity("Sannel.House.Schedule.Models.ScheduleProperty", b =>
                {
                    b.HasOne("Sannel.House.Schedule.Models.Schedule", "Schedule")
                        .WithMany()
                        .HasForeignKey("ScheduleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Schedule");
                });

            modelBuilder.Entity("Sannel.House.Schedule.Models.ScheduleStart", b =>
                {
                    b.HasOne("Sannel.House.Schedule.Models.Schedule", "Schedule")
                        .WithMany()
                        .HasForeignKey("ScheduleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Schedule");
                });
#pragma warning restore 612, 618
        }
    }
}
